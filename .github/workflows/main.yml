name: CI/CD Pipeline - Oi, Sumido Soluções Criativas

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-lint:
    name: "Build & Lint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Rodar GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.55
          skip-cache: true

  test:
    name: "Test"
    needs: build-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Rodar Testes
        run: go test -v ./...

  release:
    name: "Release"
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v2

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build e Push da Imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USER }}/ms-saudacoes-aleatorias:latest


  deploy:
    name: "Deploy"
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Rodar Terraform Init
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
        run: terraform -chdir=./infra init

      - name: Rodar Terraform Apply
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
        run: terraform -chdir=./infra apply -auto-approve

  cleanup:
    name: "Cleanup"
    needs: deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Rodar Terraform Destroy
        env:
          KOYEB_TOKEN: ${{ secrets.KOYEB_TOKEN }}
        run: terraform -chdir=./infra destroy -auto-approve